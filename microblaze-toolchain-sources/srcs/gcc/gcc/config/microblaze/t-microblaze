# Other functions
LIB2FUNCS_EXTRA = $(srcdir)/config/microblaze/divsi3_table.c \
		  $(srcdir)/config/microblaze/stack_overflow_exit.s \
		  $(srcdir)/config/microblaze/mb_variables.c \
		  $(srcdir)/config/microblaze/mulsi3.s \
		  $(srcdir)/config/microblaze/modsi3.s \
		  $(srcdir)/config/microblaze/umodsi3.s \
		  $(srcdir)/config/microblaze/divsi3.s \
		  $(srcdir)/config/microblaze/udivsi3.s 

# For C++ crtstuff
EXTRA_MULTILIB_PARTS = crtbegin$(objext) crtend$(objext) crti$(objext) crtn$(objext) 

# Build multiple copies of ?crt{i,n}.o, one for each target switch.
$(T)crti$(objext): crti.s
	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c crti.s -o $(T)crti$(objext)

$(T)crtn$(objext): crtn.s
	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c crtn.s -o $(T)crtn$(objext)

# Assemble startup files.
crti.s: $(srcdir)/config/microblaze/crti.s
	cat $(srcdir)/config/microblaze/crti.s > crti.s

crtn.s: $(srcdir)/config/microblaze/crtn.s
	cat $(srcdir)/config/microblaze/crtn.s > crtn.s

# We want fine grained libraries, so use the new code
# to build the floating point emulation libraries.
FPBIT = fp-bit.c
DPBIT = dp-bit.c

fp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#define FLOAT' > fp-bit.c
	cat $(srcdir)/config/fp-bit.c >> fp-bit.c

dp-bit.c: $(srcdir)/config/fp-bit.c
	cat $(srcdir)/config/fp-bit.c > dp-bit.c


MULTILIB_OPTIONS = mxl-barrel-shift mno-xl-soft-mul
MULTILIB_DIRNAMES = bs m
